"Pathogen setup
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()
call pathogen#helptags()

"Set leader key
let mapleader = ","

"Tab cycle through buffers
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>

"Set solarized color scheme
set background=dark
"set background=light
colorscheme solarized

"Sets vim backup directories
set backupdir=$HOME/.vimbackups//,/tmp//
set directory=$HOME/.vimbackups//,/tmp//

"Code formatting
syntax on
set t_Co=256
filetype plugin indent on
set ts=2
set shiftwidth=2
set expandtab
set smarttab
set number
set relativenumber

"Column width
set colorcolumn=80
highlight colorcolumn ctermbg=Black

"Maps omnicomplertion to <C-f>
inoremap <C-f> <C-x><C-O>

"Maps pastetoggle to <F4>
set pastetoggle=<F4>

"vim-gitgutter settings
let g:gitgutter_signs = 1
let g:gitgutter_realtime = 1

"vim-go settings
let g:go_disable_autoinstall = 0

"unite settings
map <C-p> :Unite file buffer<CR> i
map <leader>ur :Unite file_mru<CR> i

"neocomplete settings
let g:neocomplete#enable_at_startup = 1

"Tagbar toggle
nmap <F8> :TagbarToggle<CR>

"Nerdtree toggle
map <F7> :NERDTreeToggle<CR>

"Source files
source $HOME/.vim/source/gotags

"Vdebug
"let g:vdebug_options = {'path_maps': {"/vagrant_data": "/Users/gsullice/development/sites"}, 'server': '', 'break_on_open': 0}
let g:vdebug_options= {
      \ "port" : 9000,
      \ "timeout" : 30,
      \ "break_on_open" : 0,
      \}
"\ "path_maps" : {"/var/www": ""}
let g:vdebug_options["watch_window_style"] = "compact"
"let g:vdebug_options['path_maps'] = {"/var/www/html": "/home/gabe/projects/aten/ltlt/ltlt-drupal/docroot"}
let g:vdebug_options['path_maps'] = {"/var/www/html": "/home/gabe/projects/aten/c4l/c4l-platform/public_html"}
"let g:vdebug_options['path_maps'] = {"/var/www/html": "/home/gabe/projects/core_contrib/jsonapi/docroot"}
"let g:vdebug_options['path_maps'] = {"/var/www/html": "/home/gabe/projects/github.com/gabesullice/form-checker-example/docroot"}
"let g:vdebug_options['server'] = ""

set path=$PWD/**

"Neosnippets
"" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

"" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

"" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_php_phpcs_args="--standard=Drupal --extensions=php,module,inc,install,test,profile,theme"
if has('statusline')
  set laststatus=2
  " Broken down into easily includeable segments
  set statusline=%<%f\ " Filename
  set statusline+=%w%h%m%r " Options
  set statusline+=%{fugitive#statusline()} " Git Hotness
  set statusline+=\ [%{&ff}/%Y] " filetype
  set statusline+=\ [%{getcwd()}] " current dir
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*
  let g:syntastic_enable_signs=1
  set statusline+=%=%-14.(%l,%c%V%)\ %p%% " Right aligned file nav info
endif
